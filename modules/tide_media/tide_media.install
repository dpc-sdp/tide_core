<?php

/**
 * @file
 * Tide Media install.
 */

use Drupal\field\Entity\FieldConfig;
use Drupal\tide_media\TideOperation;

/**
 * Implements hook_install().
 */
function tide_media_install() {
  TideOperation::enableStandaloneMedia();
  TideOperation::entityUsageDefaultSettings();
  TideOperation::assignNecessaryPermissions();
  TideOperation::createLicenseTypeTerms();
  TideOperation::addMediaTypePermissions();

}

/**
 * Updates to have department field required.
 */
function tide_media_update_10001() {
  $entity_type = 'media';
  $media_bundles = \Drupal::service('entity_type.bundle.info')->getBundleInfo($entity_type);
  $bundles = [
    'audio',
    'document',
    'embedded_video',
    'file',
    'image',
  ];
  if (!empty($media_bundles) && is_array($media_bundles)) {
    foreach ($media_bundles as $name => $bundle) {
      if (in_array($name, $bundles)) {
        $field = FieldConfig::loadByName($entity_type, $name, 'field_media_department');
        if (!empty($field)) {
          $field->setRequired(TRUE);
          $field->save();
        }
      }
    }
  }
}

/**
 * Creates terms for license_type vocabulary for installed site.
 */
function tide_media_update_10002() {
  TideOperation::createLicenseTypeTerms();
}

/**
 * Remove the png icon.
 */
function tide_media_update_10003() {
  $config_factory = \Drupal::configFactory();
  $config = $config_factory->getEditable('embed.button.tide_media');
  $config->set('icon', [])->save();
}

/**
 * Update media permissions.
 */
function tide_media_update_10004() {
  TideOperation::addMediaTypePermissions();
}

/**
 * Adds paragraphs_library_item to track_enabled_target_entity_types.
 */
function tide_media_update_10005() {
  // Update entity_usage.
  $config_factory = \Drupal::configFactory();
  $config = $config_factory->getEditable('entity_usage.settings');
  $result = $config->get('track_enabled_target_entity_types');
  array_push($result, 'paragraphs_library_item');
  $config->set('track_enabled_target_entity_types', $result);
  $config->save();
}

/**
 * Adds media_alias_display settings for document type.
 */
function tide_media_update_10006() {
  // Check if the media_library module is enabled, enable it.
  if (\Drupal::moduleHandler()->moduleExists('media_library') === FALSE) {
    \Drupal::service('module_installer')->install(['media_library']);
  }

  if (\Drupal::moduleHandler()->moduleExists('media_alias_display') === FALSE) {
    \Drupal::service('module_installer')->install(['media_alias_display']);
  }

  $media_config = \Drupal::service('config.factory')->getEditable('media_alias_display.settings');
  if ($media_config) {
    $media_config->set('media_bundles', ['document' => 'document']);
    $media_config->save();
  }
}

/**
 * Update views.view.media and views.view.tide_media_browser.
 */
function tide_media_update_10007() {
  \Drupal::moduleHandler()->loadInclude('tide_core', 'inc', 'includes/helpers');

  // Define config paths for optional and install locations.
  $config_optional_location = \Drupal::service('extension.list.module')->getPath('tide_core') . '/config/optional';
  $config_install_location = \Drupal::service('extension.list.module')->getPath('tide_core') . '/config/install';

  // Get the config storage for views.
  $storage = \Drupal::entityTypeManager()->getStorage('view');

  $yaml = \Drupal::service('serialization.yaml');
  if ($yaml === NULL) {
    \Drupal::logger('tide_media')->error('YAML service is not available.');
    return;
  }
  // Handle 'views.view.media' (Optional).
  $config_entity_optional = $storage->load('media');
  if ($config_entity_optional) {
    $yaml_file_path_optional = $config_optional_location . '/views.view.media.yml';
    if (file_exists($yaml_file_path_optional)) {
      $yaml_data_optional = $yaml->decode(file_get_contents($yaml_file_path_optional));
      if (is_array($yaml_data_optional)) {
        $config_entity_optional->set('display', $yaml_data_optional['display']);
        $config_entity_optional->save();
        \Drupal::logger('tide_media')->notice('Updated views.view.media configuration.');
      }
    } else {
      \Drupal::logger('tide_media')->error('YAML data for views.view.media is not valid.');
    }
  } else {
    \Drupal::logger('tide_media')->error('YAML file does not exist.');
  }

  // Handle 'views.view.tide_media_browser' (Install).
  $config_entity_install = $storage->load('tide_media_browser');
  if ($config_entity_install) {
    $yaml_file_path_install = $config_install_location . '/views.view.tide_media_browser.yml';
    if (file_exists($yaml_file_path_install)) {
      $yaml_data_install = $yaml->decode(file_get_contents($yaml_file_path_install));
      if (is_array($yaml_data_install)) {
        $config_entity_install->set('display', $yaml_data_install['display']);
        $config_entity_install->save();
        \Drupal::logger('tide_media')->notice('Updated views.view.tide_media_browser configuration.');
      }
    } else {
      \Drupal::logger('tide_media')->error('YAML data for views.view.tide_media_browser is not valid.');
    }
  } else {
    \Drupal::logger('tide_media')->error('YAML file does not exist.');
  }
}
