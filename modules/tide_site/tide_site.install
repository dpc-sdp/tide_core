<?php

/**
 * @file
 * Install file for tide_site.
 */

use Drupal\Component\Utility\NestedArray;

/**
 * Implements hook_install().
 */
function tide_site_install() {
  // Retroactively create fields on existing entities.
  $info = \Drupal::service('entity_type.bundle.info')->getAllBundleInfo();
  foreach ($info as $type => $bundles) {
    foreach (array_keys($bundles) as $bundle) {
      tide_site_entity_bundle_create($type, $bundle);
    }
  }
}

/**
 * New field taxonomy image logo.
 */
function tide_site_update_10001() {
  \Drupal::moduleHandler()->loadInclude('tide_core', 'inc', 'includes/helpers');
  $config_location = [\Drupal::service('extension.list.module')->getPath('tide_core') . '/config/install'];

  $configs = [
    'field.storage.taxonomy_term.field_additional_comment' => 'field_storage_config',
    'field.field.taxonomy_term.sites.field_additional_comment' => 'field_config',
  ];
  // Check if field already exported to config/sync.
  foreach ($configs as $config => $type) {
    $config_read = _tide_read_config($config, $config_location, TRUE);
    $storage = \Drupal::entityTypeManager()->getStorage($type);
    $config_entity = $storage->createFromStorageRecord($config_read);
    $config_entity->save();
  }

  $form_configs = [
    'core.entity_form_display.taxonomy_term.sites.default',
    'core.entity_view_display.taxonomy_term.sites.default',
  ];
  foreach ($form_configs as $form_config) {
    $rewrite = _tide_read_config($form_config, $config_location, FALSE);
    $display_config_entity = \Drupal::configFactory()->getEditable($form_config);
    $original_config = $display_config_entity->getRawData();
    $rewritten_config = NestedArray::mergeDeep($original_config, $rewrite);
    if ($rewritten_config['dependencies']) {
      $dependencies = $rewritten_config['dependencies'];
      foreach ($dependencies as $type => $items) {
        $uniqueItems = array_unique($items);
        sort($uniqueItems);
        $dependencies[$type] = $uniqueItems;
      }
      $rewritten_config['dependencies'] = $dependencies;
    }
    $display_config_entity->setData($rewritten_config);
    $display_config_entity->save();
  }
}

/**
 * New field site specific quick exit button.
 */
function tide_site_update_10002() {
  $update_service = \Drupal::service('tide_core.entity_update_helper');
  // Import extra fields.
  $field_configs = [
    'taxonomy_term.field_show_exit_site_specific' => 'field_storage_config',
    'taxonomy_term.sites.field_show_exit_site_specific' => 'field_config',
  ];
  /** @var \Drupal\config_update\ConfigReverter $config_update */
  foreach ($field_configs as $name => $type) {
    $update_service->import($type, $name);
  }
  $taxonomy_configs = [
    'entity_form_display' => 'taxonomy_term.sites.default',
    'entity_view_display' => 'taxonomy_term.sites.default',
    'field_config' => 'taxonomy_term.sites.field_site_show_exit_site'
  ];
  //$update_service->configMergeDeep('tide_site', TideEntityUpdateHelper::INSTALL_DIR, $taxonomy_configs);
  foreach ($taxonomy_configs as $configs_name => $types) {
    // Check default configuration.
    $config = \Drupal::configFactory()->getEditable($configs_name);
    if ($config) {
      $update_service->revert($configs_name, $types);
    }
  }
}
