<?php

/**
 * @file
 * Install file.
 */

use Drupal\tide_webform\TideOperation;

/**
 * Implements hook_install().
 */
function tide_webform_install() {
  TideOperation::installWebformConfig();
  TideOperation::accessTextEditorInWebform();
}

/**
 * Enables webform_wizard_page element.
 */
function tide_webform_update_10001() {
  $config = \Drupal::configFactory()->getEditable('webform.settings');
  $excluded_elements_value = $config->get('element.excluded_elements');
  unset($excluded_elements_value['webform_wizard_page']);
  $config->set('element.excluded_elements', $excluded_elements_value);
  $config->save();
}

/**
 * Import configs for Captcha feature.
 */
function tide_webform_update_10002() {
  $configs = [
    'taxonomy.vocabulary.captcha_widgets' => 'taxonomy_vocabulary',
    'field.storage.taxonomy_term.field_site_key' => 'field_storage_config',
    'field.storage.taxonomy_term.field_captcha_type' => 'field_storage_config',
    'field.field.taxonomy_term.captcha_widgets.field_site_key' => 'field_config',
    'field.field.taxonomy_term.captcha_widgets.field_captcha_type' => 'field_config',
    'core.entity_view_display.taxonomy_term.captcha_widgets.default' => 'entity_view_display',
    'core.entity_form_display.taxonomy_term.captcha_widgets.default' => 'entity_form_display',
  ];

  \Drupal::moduleHandler()->loadInclude('tide_core', 'inc', 'includes/helpers');
  $config_location = [\Drupal::service('extension.list.module')->getPath('tide_webform') . '/config/optional'];
  foreach ($configs as $config_name => $type) {
    $config_read = _tide_read_config($config_name, $config_location, TRUE);
    $storage = \Drupal::entityTypeManager()->getStorage($type);
    $id = $storage->getIDFromConfigName($config_name, $storage->getEntityType()->getConfigPrefix());
    if ($storage->load($id) == NULL) {
      $config_entity = $storage->createFromStorageRecord($config_read);
      $config_entity->save();
    }
  }
}

/**
 * Update tide webform dependencies.
 */
function update_tide_webform_dependencies(array $dependencies, array $remove_modules = [], array $add_modules = []) {
  if (isset($dependencies['module'])) {
    $dependencies['module'] = array_values(
      array_diff($dependencies['module'], $remove_modules)
    );
    $dependencies['module'] = array_unique(
      array_merge($dependencies['module'], $add_modules)
    );
    sort($dependencies['module']);
  }
  return $dependencies;
}

/**
 * Update tide webform captcha settings.
 */
function update_tide_webform_captcha_settings(array $config) {
  if (isset($config['tide_webform_captcha'])) {
    $settings = $config['tide_webform_captcha'];
    unset($config['tide_webform_captcha']);
    $config['tide_webform'] = $settings;
  }
  return $config;
}

/**
 * Update webform dependencies and third party settings.
 */
function tide_webform_update_10003() {
  $webform_storage = \Drupal::entityTypeManager()->getStorage('webform');
  $webforms = $webform_storage->loadMultiple();
  foreach ($webforms as $webform_id => $webform_entity) {
    $config = \Drupal::configFactory()->getEditable('webform.webform.' . $webform_id);
    $dependencies = $config->get('dependencies');
    $third_party_settings = $config->get('third_party_settings');
    if (!empty($dependencies)) {
      $result = update_tide_webform_dependencies($dependencies, ['tide_webform_captcha'], ['tide_webform']);
      $config->set('dependencies', $result)->save();
    }
    if (!empty($third_party_settings)) {
      $result = update_tide_webform_captcha_settings($third_party_settings);
      $config->set('third_party_settings', $result)->save();
    }
  }
}
